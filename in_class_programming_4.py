# -*- coding: utf-8 -*-
"""In Class Programming 4.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1uk0GEo1OxvjFBZZwAukA96um2fAp2Nmy
"""

#1 Pandas
import pandas as pd

df = pd.read_csv('data.csv')
print(df)

print("Statistical Description: ")
print(df.describe())

#check for null values
print("\nNull Values: ")
any_null = df.isnull().any()
print(any_null)

#replace null values
df['Calories'].fillna(int(df['Calories'].mean()), inplace=True)
print("\nUpdated Null Values: ")
new_null = df.isnull().any()
print(new_null)

#use count to group columns
pulse_and_calories = df.groupby("Duration")["Calories"].count()
print("\nDuration Grouped with Calories using count: ")
print(pulse_and_calories)

maxData = df.max(0, False, None, None)
print("\nMaximum value of each column: ")
print(maxData)

minData = df.min(0, False, None, None)
print("\nMinimum value of each column: ")
print(minData)

print("\nMean of Calories and Duration columns: ")
meanData = df[["Calories","Duration"]].mean()
print(meanData)

print("\nRows with Calorie values between 500 and 1000: ")
calorie_condition = df[(df["Calories"] >= 500) & (df["Calories"] <= 1000)]
print(calorie_condition)

print("\nRows with Calorie values above 500 and pulse values below 100: ")
calorie_condition_pulse = df[(df["Calories"] > 500) & (df["Pulse"] < 100)]
print(calorie_condition_pulse)

print("\nDataFrame without Maxpulse: ")
df_modified = df.drop("Maxpulse", axis=1)
print(df_modified)

print("\nMain df dataframe without Maxpulse: ")
df = df.drop("Maxpulse", axis=1)
print(df)

#Convert calories column into int
print("\nDataType of every column after change: ")
df['Calories'] = df['Calories'].astype('int')
print(df.dtypes)

#create a scatter plot for duration and calories
df.plot.scatter(x='Duration', y='Calories')



#2 Matplotlib
import matplotlib.pyplot as plt
import numpy as np
import pandas as pd

#Creating pie charts
chart = np.array([22.2, 17.6, 8.8, 8, 7.7, 6.7])
chartLabels = ["Java", "Python", "PHP", "JavaScript","C#","C++"]
explodeJava = [0.070, 0, 0, 0, 0, 0]

plt.pie(chart, labels = chartLabels, startangle = 140, explode = explodeJava, autopct = '%1.1f%%', shadow = True)
plt.show()

#Creating scatterplots
math_marks = [88, 92, 80, 89, 100, 80, 60, 100, 80, 34]
science_marks = [35, 79, 79, 48, 100, 88, 32, 45, 20, 30]
marks_range = [10, 20, 30, 40, 50, 60, 70, 80, 90, 100]

# Create a scatter plot
plt.scatter(marks_range, math_marks, color='red', label = 'Math Marks')
plt.scatter(marks_range, science_marks, color='green', label = 'Science Marks')

# Add labels and title, define the range
plt.xlabel('Marks Range')
plt.ylabel('Marks Scored')
plt.title('Maths vs. Science Marks')

plt.xticks(range(0, 121, 20))
plt.yticks(range(0, 125, 20))

# Show the plot
plt.show()